{
  "openapi": "3.0.2",
  "info": {
    "title": "Render Public API",
    "description": "Manage everything about your Render services",
    "version": "1.0.0",
    "contact": {
      "name": "Render API",
      "url": "https://render.com/chat",
      "email": "support@render.com"
    }
  },
  "servers": [
    {
      "url": "https://api.render.com/v1"
    }
  ],
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Custom Domains"
    },
    {
      "name": "Deploys"
    },
    {
      "name": "Jobs"
    },
    {
      "name": "Owners",
      "description": "The `Owners` endpoints supply more information about the users and teams that your API key has access to."
    },
    {
      "name": "Services"
    }
  ],
  "paths": {
    "/owners": {
      "get": {
        "summary": "List authorized users and teams",
        "operationId": "get-owners",
        "tags": [
          "Owners"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "email",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "properties": {
                      "owner": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "user",
                              "team"
                            ]
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/owners/{ownerId}": {
      "parameters": [
        {
          "name": "ownerId",
          "in": "path",
          "required": true,
          "description": "The ID of the user or team",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve user or team",
        "operationId": "get-owner",
        "tags": [
          "Owners"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "user",
                        "team"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services": {
      "get": {
        "summary": "List services",
        "operationId": "get-services",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the names of services"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "static_site",
                  "web_service",
                  "private_service",
                  "background_worker",
                  "cron_job"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for types of services"
          },
          {
            "name": "env",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "docker",
                  "elixir",
                  "go",
                  "node",
                  "python",
                  "ruby",
                  "rust"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for environments of services"
          },
          {
            "name": "region",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "oregon",
                  "frankfurt"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for regions of services"
          },
          {
            "name": "suspended",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "suspended",
                  "not_suspended"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter services based on whether they're suspended or not suspended"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services updated before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for services updated after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "ownerId",
            "in": "query",
            "description": "The ID of the owner (team or personal user) whose resources should be returned",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "service": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "autoDeploy": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          },
                          "branch": {
                            "type": "string"
                          },
                          "buildFilter": {
                            "type": "object",
                            "properties": {
                              "paths": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "ignoredPaths": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "name": {
                            "type": "string"
                          },
                          "notifyOnFail": {
                            "type": "string",
                            "enum": [
                              "default",
                              "notify",
                              "ignore"
                            ]
                          },
                          "ownerId": {
                            "type": "string"
                          },
                          "repo": {
                            "type": "string",
                            "example": "https://github.com/render-examples/flask-hello-world"
                          },
                          "rootDir": {
                            "type": "string"
                          },
                          "slug": {
                            "type": "string"
                          },
                          "suspended": {
                            "type": "string",
                            "enum": [
                              "suspended",
                              "not_suspended"
                            ]
                          },
                          "suspenders": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "enum": [
                                "admin",
                                "billing",
                                "user",
                                "parent_service",
                                "unknown"
                              ]
                            }
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "static_site",
                              "web_service",
                              "private_service",
                              "background_worker",
                              "cron_job"
                            ]
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "serviceDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "parentServer": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "publishPath": {
                                    "type": "string"
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "disk": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust"
                                    ]
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "healthCheckPath": {
                                    "type": "string"
                                  },
                                  "numInstances": {
                                    "type": "integer"
                                  },
                                  "openPorts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "port": {
                                          "type": "integer",
                                          "example": 10000
                                        },
                                        "protocol": {
                                          "type": "string",
                                          "enum": [
                                            "TCP",
                                            "UDP"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "parentServer": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "free",
                                      "custom"
                                    ]
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "oregon",
                                      "frankfurt"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "disk": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust"
                                    ]
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "numInstances": {
                                    "type": "integer"
                                  },
                                  "openPorts": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "port": {
                                          "type": "integer",
                                          "example": 10000
                                        },
                                        "protocol": {
                                          "type": "string",
                                          "enum": [
                                            "TCP",
                                            "UDP"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "parentServer": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "custom"
                                    ]
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "oregon",
                                      "frankfurt"
                                    ]
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "disk": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust"
                                    ]
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "numInstances": {
                                    "type": "integer"
                                  },
                                  "parentServer": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    }
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "custom"
                                    ]
                                  },
                                  "pullRequestPreviewsEnabled": {
                                    "type": "string",
                                    "enum": [
                                      "yes",
                                      "no"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "oregon",
                                      "frankfurt"
                                    ]
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "env": {
                                    "type": "string",
                                    "enum": [
                                      "docker",
                                      "elixir",
                                      "go",
                                      "node",
                                      "python",
                                      "ruby",
                                      "rust"
                                    ]
                                  },
                                  "envSpecificDetails": {
                                    "oneOf": [
                                      {
                                        "type": "object",
                                        "properties": {
                                          "dockerCommand": {
                                            "type": "string"
                                          },
                                          "dockerContext": {
                                            "type": "string"
                                          },
                                          "dockerfilePath": {
                                            "type": "string"
                                          }
                                        }
                                      },
                                      {
                                        "type": "object",
                                        "properties": {
                                          "buildCommand": {
                                            "type": "string"
                                          },
                                          "startCommand": {
                                            "type": "string"
                                          }
                                        }
                                      }
                                    ]
                                  },
                                  "lastSuccessfulRunAt": {
                                    "type": "string",
                                    "format": "date-time"
                                  },
                                  "plan": {
                                    "type": "string",
                                    "enum": [
                                      "starter",
                                      "starter_plus",
                                      "standard",
                                      "standard_plus",
                                      "pro",
                                      "pro_plus",
                                      "pro_max",
                                      "pro_ultra",
                                      "custom"
                                    ]
                                  },
                                  "region": {
                                    "type": "string",
                                    "enum": [
                                      "oregon",
                                      "frankfurt"
                                    ]
                                  },
                                  "schedule": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create service",
        "operationId": "create-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "type",
                  "name",
                  "ownerId",
                  "repo"
                ],
                "properties": {
                  "type": {
                    "type": "string",
                    "enum": [
                      "static_site",
                      "web_service",
                      "private_service",
                      "background_worker",
                      "cron_job"
                    ]
                  },
                  "name": {
                    "type": "string"
                  },
                  "ownerId": {
                    "type": "string"
                  },
                  "repo": {
                    "type": "string",
                    "example": "https://github.com/render-examples/flask-hello-world",
                    "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
                  },
                  "autoDeploy": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "yes",
                    "description": "Defaults to \"yes\""
                  },
                  "branch": {
                    "type": "string",
                    "description": "If left empty, this will fall back to the default branch of the repository"
                  },
                  "buildFilter": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoredPaths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "rootDir": {
                    "type": "string"
                  },
                  "envVars": {
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "type": "object",
                          "required": [
                            "key",
                            "value"
                          ],
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "required": [
                            "key",
                            "generateValue"
                          ],
                          "properties": {
                            "key": {
                              "type": "string"
                            },
                            "generateValue": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            }
                          }
                        }
                      ]
                    }
                  },
                  "secretFiles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "name",
                        "contents"
                      ],
                      "properties": {
                        "name": {
                          "type": "string"
                        },
                        "contents": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "serviceDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "headers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "path",
                                "name",
                                "value"
                              ],
                              "properties": {
                                "path": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "publishPath": {
                            "type": "string",
                            "description": "Defaults to \"public\""
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "routes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "required": [
                                "type",
                                "source",
                                "destination"
                              ],
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "redirect",
                                    "rewrite"
                                  ]
                                },
                                "source": {
                                  "type": "string"
                                },
                                "destination": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust"
                            ]
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "healthCheckPath": {
                            "type": "string"
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "oregon",
                              "frankfurt"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust"
                            ]
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "oregon",
                              "frankfurt"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env"
                        ],
                        "properties": {
                          "disk": {
                            "type": "object",
                            "required": [
                              "name",
                              "mountPath"
                            ],
                            "properties": {
                              "name": {
                                "type": "string"
                              },
                              "mountPath": {
                                "type": "string"
                              },
                              "sizeGB": {
                                "type": "integer",
                                "minimum": 1,
                                "description": "Defaults to 1"
                              }
                            }
                          },
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust"
                            ]
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "numInstances": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "description": "Defaults to 1"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ],
                            "default": "no",
                            "description": "Defaults to \"no\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "oregon",
                              "frankfurt"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "env",
                          "schedule"
                        ],
                        "properties": {
                          "env": {
                            "type": "string",
                            "enum": [
                              "docker",
                              "elixir",
                              "go",
                              "node",
                              "python",
                              "ruby",
                              "rust"
                            ]
                          },
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string",
                                    "description": "Defaults to \"./Dockerfile\""
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "buildCommand",
                                  "startCommand"
                                ],
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ],
                            "default": "starter",
                            "description": "Defaults to \"starter\""
                          },
                          "region": {
                            "type": "string",
                            "enum": [
                              "oregon",
                              "frankfurt"
                            ],
                            "default": "oregon",
                            "description": "Defaults to \"oregon\""
                          },
                          "schedule": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "service": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "autoDeploy": {
                          "type": "string",
                          "enum": [
                            "yes",
                            "no"
                          ]
                        },
                        "branch": {
                          "type": "string"
                        },
                        "buildFilter": {
                          "type": "object",
                          "properties": {
                            "paths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "ignoredPaths": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "name": {
                          "type": "string"
                        },
                        "notifyOnFail": {
                          "type": "string",
                          "enum": [
                            "default",
                            "notify",
                            "ignore"
                          ]
                        },
                        "ownerId": {
                          "type": "string"
                        },
                        "repo": {
                          "type": "string",
                          "example": "https://github.com/render-examples/flask-hello-world"
                        },
                        "rootDir": {
                          "type": "string"
                        },
                        "slug": {
                          "type": "string"
                        },
                        "suspended": {
                          "type": "string",
                          "enum": [
                            "suspended",
                            "not_suspended"
                          ]
                        },
                        "suspenders": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "admin",
                              "billing",
                              "user",
                              "parent_service",
                              "unknown"
                            ]
                          }
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "static_site",
                            "web_service",
                            "private_service",
                            "background_worker",
                            "cron_job"
                          ]
                        },
                        "updatedAt": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "serviceDetails": {
                          "oneOf": [
                            {
                              "type": "object",
                              "properties": {
                                "buildCommand": {
                                  "type": "string"
                                },
                                "parentServer": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "publishPath": {
                                  "type": "string"
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "disk": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust"
                                  ]
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "healthCheckPath": {
                                  "type": "string"
                                },
                                "numInstances": {
                                  "type": "integer"
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "free",
                                    "custom"
                                  ]
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "oregon",
                                    "frankfurt"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "disk": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust"
                                  ]
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer"
                                },
                                "openPorts": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "port": {
                                        "type": "integer",
                                        "example": 10000
                                      },
                                      "protocol": {
                                        "type": "string",
                                        "enum": [
                                          "TCP",
                                          "UDP"
                                        ]
                                      }
                                    }
                                  }
                                },
                                "parentServer": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "custom"
                                  ]
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "oregon",
                                    "frankfurt"
                                  ]
                                },
                                "url": {
                                  "type": "string"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "disk": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust"
                                  ]
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "numInstances": {
                                  "type": "integer"
                                },
                                "parentServer": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    }
                                  }
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "custom"
                                  ]
                                },
                                "pullRequestPreviewsEnabled": {
                                  "type": "string",
                                  "enum": [
                                    "yes",
                                    "no"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "oregon",
                                    "frankfurt"
                                  ]
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "env": {
                                  "type": "string",
                                  "enum": [
                                    "docker",
                                    "elixir",
                                    "go",
                                    "node",
                                    "python",
                                    "ruby",
                                    "rust"
                                  ]
                                },
                                "envSpecificDetails": {
                                  "oneOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "dockerCommand": {
                                          "type": "string"
                                        },
                                        "dockerContext": {
                                          "type": "string"
                                        },
                                        "dockerfilePath": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "buildCommand": {
                                          "type": "string"
                                        },
                                        "startCommand": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  ]
                                },
                                "lastSuccessfulRunAt": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "plan": {
                                  "type": "string",
                                  "enum": [
                                    "starter",
                                    "starter_plus",
                                    "standard",
                                    "standard_plus",
                                    "pro",
                                    "pro_plus",
                                    "pro_max",
                                    "pro_ultra",
                                    "custom"
                                  ]
                                },
                                "region": {
                                  "type": "string",
                                  "enum": [
                                    "oregon",
                                    "frankfurt"
                                  ]
                                },
                                "schedule": {
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    "deployId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve service",
        "operationId": "get-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "autoDeploy": {
                      "type": "string",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    },
                    "branch": {
                      "type": "string"
                    },
                    "buildFilter": {
                      "type": "object",
                      "properties": {
                        "paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoredPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "notifyOnFail": {
                      "type": "string",
                      "enum": [
                        "default",
                        "notify",
                        "ignore"
                      ]
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "repo": {
                      "type": "string",
                      "example": "https://github.com/render-examples/flask-hello-world"
                    },
                    "rootDir": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "suspended": {
                      "type": "string",
                      "enum": [
                        "suspended",
                        "not_suspended"
                      ]
                    },
                    "suspenders": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "billing",
                          "user",
                          "parent_service",
                          "unknown"
                        ]
                      }
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "static_site",
                        "web_service",
                        "private_service",
                        "background_worker",
                        "cron_job"
                      ]
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "serviceDetails": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "buildCommand": {
                              "type": "string"
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "publishPath": {
                              "type": "string"
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "healthCheckPath": {
                              "type": "string"
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "lastSuccessfulRunAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "schedule": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update service",
        "operationId": "update-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "autoDeploy": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "branch": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "buildFilter": {
                    "type": "object",
                    "properties": {
                      "paths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "ignoredPaths": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "rootDir": {
                    "type": "string"
                  },
                  "serviceDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "publishPath": {
                            "type": "string"
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "healthCheckPath": {
                            "type": "string"
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ]
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ]
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ]
                          },
                          "pullRequestPreviewsEnabled": {
                            "type": "string",
                            "enum": [
                              "yes",
                              "no"
                            ]
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "envSpecificDetails": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "dockerCommand": {
                                    "type": "string"
                                  },
                                  "dockerContext": {
                                    "type": "string"
                                  },
                                  "dockerfilePath": {
                                    "type": "string"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "buildCommand": {
                                    "type": "string"
                                  },
                                  "startCommand": {
                                    "type": "string"
                                  }
                                }
                              }
                            ]
                          },
                          "plan": {
                            "type": "string",
                            "enum": [
                              "starter",
                              "starter_plus",
                              "standard",
                              "standard_plus",
                              "pro",
                              "pro_plus",
                              "pro_max",
                              "pro_ultra"
                            ]
                          },
                          "schedule": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "autoDeploy": {
                      "type": "string",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    },
                    "branch": {
                      "type": "string"
                    },
                    "buildFilter": {
                      "type": "object",
                      "properties": {
                        "paths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "ignoredPaths": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "name": {
                      "type": "string"
                    },
                    "notifyOnFail": {
                      "type": "string",
                      "enum": [
                        "default",
                        "notify",
                        "ignore"
                      ]
                    },
                    "ownerId": {
                      "type": "string"
                    },
                    "repo": {
                      "type": "string",
                      "example": "https://github.com/render-examples/flask-hello-world"
                    },
                    "rootDir": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "suspended": {
                      "type": "string",
                      "enum": [
                        "suspended",
                        "not_suspended"
                      ]
                    },
                    "suspenders": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "enum": [
                          "admin",
                          "billing",
                          "user",
                          "parent_service",
                          "unknown"
                        ]
                      }
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "static_site",
                        "web_service",
                        "private_service",
                        "background_worker",
                        "cron_job"
                      ]
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "serviceDetails": {
                      "oneOf": [
                        {
                          "type": "object",
                          "properties": {
                            "buildCommand": {
                              "type": "string"
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "publishPath": {
                              "type": "string"
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "healthCheckPath": {
                              "type": "string"
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "free",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "openPorts": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "port": {
                                    "type": "integer",
                                    "example": 10000
                                  },
                                  "protocol": {
                                    "type": "string",
                                    "enum": [
                                      "TCP",
                                      "UDP"
                                    ]
                                  }
                                }
                              }
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "disk": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "numInstances": {
                              "type": "integer"
                            },
                            "parentServer": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                }
                              }
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "pullRequestPreviewsEnabled": {
                              "type": "string",
                              "enum": [
                                "yes",
                                "no"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "env": {
                              "type": "string",
                              "enum": [
                                "docker",
                                "elixir",
                                "go",
                                "node",
                                "python",
                                "ruby",
                                "rust"
                              ]
                            },
                            "envSpecificDetails": {
                              "oneOf": [
                                {
                                  "type": "object",
                                  "properties": {
                                    "dockerCommand": {
                                      "type": "string"
                                    },
                                    "dockerContext": {
                                      "type": "string"
                                    },
                                    "dockerfilePath": {
                                      "type": "string"
                                    }
                                  }
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "buildCommand": {
                                      "type": "string"
                                    },
                                    "startCommand": {
                                      "type": "string"
                                    }
                                  }
                                }
                              ]
                            },
                            "lastSuccessfulRunAt": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "plan": {
                              "type": "string",
                              "enum": [
                                "starter",
                                "starter_plus",
                                "standard",
                                "standard_plus",
                                "pro",
                                "pro_plus",
                                "pro_max",
                                "pro_ultra",
                                "custom"
                              ]
                            },
                            "region": {
                              "type": "string",
                              "enum": [
                                "oregon",
                                "frankfurt"
                              ]
                            },
                            "schedule": {
                              "type": "string"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete service",
        "operationId": "delete-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "204": {
            "description": "Service deleted"
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/deploys": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List deploys",
        "operationId": "get-deploys",
        "tags": [
          "Deploys"
        ],
        "parameters": [
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "updatedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys updated before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "updatedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys updated after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "finishedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys finished before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "finishedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for deploys finished after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "deploy": {
                        "type": "object",
                        "required": [
                          "id"
                        ],
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "commit": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "message": {
                                "type": "string"
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "created",
                              "build_in_progress",
                              "update_in_progress",
                              "live",
                              "deactivated",
                              "build_failed",
                              "update_failed",
                              "canceled"
                            ]
                          },
                          "finishedAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Trigger a deploy",
        "operationId": "create-deploy",
        "tags": [
          "Deploys"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "clearCache": {
                    "type": "string",
                    "enum": [
                      "clear",
                      "do_not_clear"
                    ],
                    "default": "do_not_clear",
                    "description": "Defaults to \"do_not_clear\""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/deploys/{deployId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "deployId",
          "in": "path",
          "required": true,
          "description": "The ID of the deploy",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve deploy",
        "operationId": "get-deploy",
        "tags": [
          "Deploys"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id"
                  ],
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "commit": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "created",
                        "build_in_progress",
                        "update_in_progress",
                        "live",
                        "deactivated",
                        "build_failed",
                        "update_failed",
                        "canceled"
                      ]
                    },
                    "finishedAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/env-vars": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve environment variables",
        "operationId": "get-env-vars-for-service",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "envVar": {
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update environment variables",
        "operationId": "update-env-vars-for-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "required": [
                        "key",
                        "value"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "key",
                        "generateValue"
                      ],
                      "properties": {
                        "key": {
                          "type": "string"
                        },
                        "generateValue": {
                          "type": "string",
                          "enum": [
                            "yes",
                            "no"
                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "envVar": {
                        "type": "object",
                        "required": [
                          "key",
                          "value"
                        ],
                        "properties": {
                          "key": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/headers": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve headers",
        "operationId": "get-headers",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "path",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for specific paths that headers apply to"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for header names"
          },
          {
            "name": "value",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for header values"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "headers": {
                        "type": "object",
                        "required": [
                          "path",
                          "name",
                          "value"
                        ],
                        "properties": {
                          "path": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "value": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/routes": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve redirect and rewrite rules",
        "operationId": "get-routes",
        "tags": [
          "Services"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "redirect",
                  "rewrite"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the type of route rule"
          },
          {
            "name": "source",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the source path of the route"
          },
          {
            "name": "destination",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the destination path of the route"
          },
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "routes": {
                        "type": "object",
                        "required": [
                          "type",
                          "source",
                          "destination"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "redirect",
                              "rewrite"
                            ]
                          },
                          "source": {
                            "type": "string"
                          },
                          "destination": {
                            "type": "string"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List custom domains",
        "operationId": "get-custom-domains",
        "tags": [
          "Custom Domains"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the names of custom domain"
          },
          {
            "name": "domainType",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "apex",
                "subdomain"
              ]
            },
            "required": false,
            "description": "Filter for apex or subdomains"
          },
          {
            "name": "verificationStatus",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "verified",
                "unverified"
              ]
            },
            "required": false,
            "description": "Filter for verified or unverified custom domains"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for custom domains created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for custom domains created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "customDomain": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "domainType": {
                            "type": "string",
                            "enum": [
                              "apex",
                              "subdomain"
                            ]
                          },
                          "publicSuffix": {
                            "type": "string"
                          },
                          "redirectForName": {
                            "type": "string"
                          },
                          "verificationStatus": {
                            "type": "string",
                            "enum": [
                              "verified",
                              "unverified"
                            ]
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "server": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add custom domain",
        "operationId": "create-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "domainType": {
                        "type": "string",
                        "enum": [
                          "apex",
                          "subdomain"
                        ]
                      },
                      "publicSuffix": {
                        "type": "string"
                      },
                      "redirectForName": {
                        "type": "string"
                      },
                      "verificationStatus": {
                        "type": "string",
                        "enum": [
                          "verified",
                          "unverified"
                        ]
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "server": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "402": {
            "description": "You must enter payment information to perform this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "The current state of the resource conflicts with this request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains/{customDomainIdOrName}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "customDomainIdOrName",
          "in": "path",
          "required": true,
          "description": "The ID or name of the custom domain",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve custom domain",
        "operationId": "get-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "domainType": {
                      "type": "string",
                      "enum": [
                        "apex",
                        "subdomain"
                      ]
                    },
                    "publicSuffix": {
                      "type": "string"
                    },
                    "redirectForName": {
                      "type": "string"
                    },
                    "verificationStatus": {
                      "type": "string",
                      "enum": [
                        "verified",
                        "unverified"
                      ]
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "server": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete custom domain",
        "operationId": "delete-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "204": {
            "description": "Custom domain deleted"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/custom-domains/{customDomainIdOrName}/verify": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "customDomainIdOrName",
          "in": "path",
          "required": true,
          "description": "The ID or name of the custom domain",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Verify DNS configuration",
        "operationId": "refresh-custom-domain",
        "tags": [
          "Custom Domains"
        ],
        "responses": {
          "202": {
            "description": "Custom domain verification triggered"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/suspend": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Suspend service",
        "operationId": "suspend-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "202": {
            "description": "Service suspended successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/resume": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Resume service",
        "operationId": "resume-service",
        "tags": [
          "Services"
        ],
        "responses": {
          "202": {
            "description": "Service resumed successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/scale": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Scale service to desired number of instances",
        "operationId": "scale-service",
        "tags": [
          "Services"
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "numInstances"
                ],
                "properties": {
                  "numInstances": {
                    "type": "integer",
                    "example": 3
                  }
                }
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Service scaled successfully"
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "You do not have permissions for the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "406": {
            "description": "Unable to generate preferred media types as specified by Accept request header.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "410": {
            "description": "The requested resource is no longer available.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "List jobs",
        "operationId": "list-job",
        "tags": [
          "Jobs"
        ],
        "parameters": [
          {
            "name": "cursor",
            "in": "query",
            "required": false,
            "description": "Cursor to begin retrieving entries for this query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Max number of items that can be returned",
            "schema": {
              "type": "number",
              "default": 20,
              "minimum": 1,
              "maximum": 100,
              "description": "Defaults to 20"
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "pending",
                  "running",
                  "succeeded",
                  "failed"
                ]
              }
            },
            "style": "form",
            "explode": false,
            "required": false,
            "description": "Filter for the status of the job (`pending`, `running`, `succeeded`, or `failed`)"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs created before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "createdAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs created after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "startedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs started before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "startedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs started after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          },
          {
            "name": "finishedBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs finished before a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-06-17T08:15:30Z"
          },
          {
            "name": "finishedAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "required": false,
            "description": "Filter for jobs finished after a certain time (specified as an ISO 8601 timestamp)",
            "example": "2021-02-17T08:15:30Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "job": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "job-xxxxx"
                          },
                          "serviceId": {
                            "type": "string",
                            "example": "srv-xxxxx"
                          },
                          "startCommand": {
                            "type": "string",
                            "example": "echo 'hello world'"
                          },
                          "planId": {
                            "type": "string",
                            "example": "plan-srv-004"
                          },
                          "status": {
                            "type": "string",
                            "example": "succeeded"
                          },
                          "createdAt": {
                            "type": "string",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          },
                          "startedAt": {
                            "type": "string",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          },
                          "finishedAt": {
                            "type": "string",
                            "example": "2021-07-15T07:20:05.777035-07:00"
                          }
                        }
                      },
                      "cursor": {
                        "type": "string",
                        "format": "byte",
                        "example": "abc123"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create job",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "startCommand"
                ],
                "properties": {
                  "startCommand": {
                    "type": "string"
                  },
                  "planId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "operationId": "post-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs/{jobId}": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "The ID of the job",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Retrieve job",
        "operationId": "get-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/services/{serviceId}/jobs/{jobId}/cancel": {
      "parameters": [
        {
          "name": "serviceId",
          "in": "path",
          "required": true,
          "description": "The ID of the service",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "jobId",
          "in": "path",
          "required": true,
          "description": "The ID of the job",
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Cancel running job",
        "operationId": "cancel-job",
        "tags": [
          "Jobs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "job-xxxxx"
                    },
                    "serviceId": {
                      "type": "string",
                      "example": "srv-xxxxx"
                    },
                    "startCommand": {
                      "type": "string",
                      "example": "echo 'hello world'"
                    },
                    "planId": {
                      "type": "string",
                      "example": "plan-srv-004"
                    },
                    "status": {
                      "type": "string",
                      "example": "succeeded"
                    },
                    "createdAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "startedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    },
                    "finishedAt": {
                      "type": "string",
                      "example": "2021-07-15T07:20:05.777035-07:00"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "The request could not be understood by the server.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Authorization information is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Unable to find the requested resource.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate limit has been surpassed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "An unexpected server error has occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "503": {
            "description": "Server currently unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "parameters": {
      "cursorParam": {
        "name": "cursor",
        "in": "query",
        "required": false,
        "description": "Cursor to begin retrieving entries for this query",
        "schema": {
          "type": "string",
          "format": "byte"
        }
      },
      "customDomainIdOrNameParam": {
        "name": "customDomainIdOrName",
        "in": "path",
        "required": true,
        "description": "The ID or name of the custom domain",
        "schema": {
          "type": "string"
        }
      },
      "deployIdParam": {
        "name": "deployId",
        "in": "path",
        "required": true,
        "description": "The ID of the deploy",
        "schema": {
          "type": "string"
        }
      },
      "jobIdParam": {
        "name": "jobId",
        "in": "path",
        "required": true,
        "description": "The ID of the job",
        "schema": {
          "type": "string"
        }
      },
      "limitParam": {
        "name": "limit",
        "in": "query",
        "required": false,
        "description": "Max number of items that can be returned",
        "schema": {
          "type": "number",
          "default": 20,
          "minimum": 1,
          "maximum": 100,
          "description": "Defaults to 20"
        }
      },
      "ownerIdParam": {
        "name": "ownerId",
        "in": "query",
        "description": "The ID of the owner (team or personal user) whose resources should be returned",
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "style": "form",
        "explode": false,
        "required": false
      },
      "serviceIdParam": {
        "name": "serviceId",
        "in": "path",
        "required": true,
        "description": "The ID of the service",
        "schema": {
          "type": "string"
        }
      },
      "startTimeParam": {
        "name": "startTime",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "required": false,
        "description": "Epoch/Unix timestamp of start of time range to return"
      },
      "endTimeParam": {
        "name": "endTime",
        "in": "query",
        "schema": {
          "type": "integer"
        },
        "required": false,
        "description": "Epoch/Unix timestamp of end of time range to return"
      }
    },
    "schemas": {
      "service": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "branch": {
            "type": "string"
          },
          "buildFilter": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "notifyOnFail": {
            "type": "string",
            "enum": [
              "default",
              "notify",
              "ignore"
            ]
          },
          "ownerId": {
            "type": "string"
          },
          "repo": {
            "type": "string",
            "example": "https://github.com/render-examples/flask-hello-world"
          },
          "rootDir": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "suspended": {
            "type": "string",
            "enum": [
              "suspended",
              "not_suspended"
            ]
          },
          "suspenders": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "billing",
                "user",
                "parent_service",
                "unknown"
              ]
            }
          },
          "type": {
            "type": "string",
            "enum": [
              "static_site",
              "web_service",
              "private_service",
              "background_worker",
              "cron_job"
            ]
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "parentServer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "publishPath": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "numInstances": {
                    "type": "integer"
                  },
                  "openPorts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "port": {
                          "type": "integer",
                          "example": 10000
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP"
                          ]
                        }
                      }
                    }
                  },
                  "parentServer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "free",
                      "custom"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer"
                  },
                  "openPorts": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "port": {
                          "type": "integer",
                          "example": 10000
                        },
                        "protocol": {
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP"
                          ]
                        }
                      }
                    }
                  },
                  "parentServer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "custom"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ]
                  },
                  "url": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "disk": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer"
                  },
                  "parentServer": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "custom"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "lastSuccessfulRunAt": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra",
                      "custom"
                    ]
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ]
                  },
                  "schedule": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "buildFilter": {
        "type": "object",
        "properties": {
          "paths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ignoredPaths": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "dockerDetails": {
        "type": "object",
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string"
          }
        }
      },
      "nativeEnvironmentDetails": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          }
        }
      },
      "staticSiteDetails": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "parentServer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "publishPath": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "webServiceDetails": {
        "type": "object",
        "properties": {
          "disk": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "numInstances": {
            "type": "integer"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "port": {
                  "type": "integer",
                  "example": 10000
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP"
                  ]
                }
              }
            }
          },
          "parentServer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "free",
              "custom"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "privateServiceDetails": {
        "type": "object",
        "properties": {
          "disk": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer"
          },
          "openPorts": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "port": {
                  "type": "integer",
                  "example": 10000
                },
                "protocol": {
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP"
                  ]
                }
              }
            }
          },
          "parentServer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "custom"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ]
          },
          "url": {
            "type": "string"
          }
        }
      },
      "backgroundWorkerDetails": {
        "type": "object",
        "properties": {
          "disk": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer"
          },
          "parentServer": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "custom"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ]
          }
        }
      },
      "cronJobDetails": {
        "type": "object",
        "properties": {
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "lastSuccessfulRunAt": {
            "type": "string",
            "format": "date-time"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra",
              "custom"
            ]
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ]
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "servicePOST": {
        "type": "object",
        "required": [
          "type",
          "name",
          "ownerId",
          "repo"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "static_site",
              "web_service",
              "private_service",
              "background_worker",
              "cron_job"
            ]
          },
          "name": {
            "type": "string"
          },
          "ownerId": {
            "type": "string"
          },
          "repo": {
            "type": "string",
            "example": "https://github.com/render-examples/flask-hello-world",
            "description": "Do not include the branch in the repo string. You can instead supply a 'branch' parameter."
          },
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "yes",
            "description": "Defaults to \"yes\""
          },
          "branch": {
            "type": "string",
            "description": "If left empty, this will fall back to the default branch of the repository"
          },
          "buildFilter": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "rootDir": {
            "type": "string"
          },
          "envVars": {
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "type": "object",
                  "required": [
                    "key",
                    "value"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                },
                {
                  "type": "object",
                  "required": [
                    "key",
                    "generateValue"
                  ],
                  "properties": {
                    "key": {
                      "type": "string"
                    },
                    "generateValue": {
                      "type": "string",
                      "enum": [
                        "yes",
                        "no"
                      ]
                    }
                  }
                }
              ]
            }
          },
          "secretFiles": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name",
                "contents"
              ],
              "properties": {
                "name": {
                  "type": "string"
                },
                "contents": {
                  "type": "string"
                }
              }
            }
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "headers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "path",
                        "name",
                        "value"
                      ],
                      "properties": {
                        "path": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "publishPath": {
                    "type": "string",
                    "description": "Defaults to \"public\""
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "routes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "required": [
                        "type",
                        "source",
                        "destination"
                      ],
                      "properties": {
                        "type": {
                          "type": "string",
                          "enum": [
                            "redirect",
                            "rewrite"
                          ]
                        },
                        "source": {
                          "type": "string"
                        },
                        "destination": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env"
                ],
                "properties": {
                  "disk": {
                    "type": "object",
                    "required": [
                      "name",
                      "mountPath"
                    ],
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "mountPath": {
                        "type": "string"
                      },
                      "sizeGB": {
                        "type": "integer",
                        "minimum": 1,
                        "description": "Defaults to 1"
                      }
                    }
                  },
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "numInstances": {
                    "type": "integer",
                    "minimum": 1,
                    "default": 1,
                    "description": "Defaults to 1"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ],
                    "default": "no",
                    "description": "Defaults to \"no\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "env",
                  "schedule"
                ],
                "properties": {
                  "env": {
                    "type": "string",
                    "enum": [
                      "docker",
                      "elixir",
                      "go",
                      "node",
                      "python",
                      "ruby",
                      "rust"
                    ]
                  },
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string",
                            "description": "Defaults to \"./Dockerfile\""
                          }
                        }
                      },
                      {
                        "type": "object",
                        "required": [
                          "buildCommand",
                          "startCommand"
                        ],
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ],
                    "default": "starter",
                    "description": "Defaults to \"starter\""
                  },
                  "region": {
                    "type": "string",
                    "enum": [
                      "oregon",
                      "frankfurt"
                    ],
                    "default": "oregon",
                    "description": "Defaults to \"oregon\""
                  },
                  "schedule": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "dockerDetailsPOST": {
        "type": "object",
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string",
            "description": "Defaults to \"./Dockerfile\""
          }
        }
      },
      "nativeEnvironmentDetailsPOST": {
        "type": "object",
        "required": [
          "buildCommand",
          "startCommand"
        ],
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          }
        }
      },
      "staticSiteDetailsPOST": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "headers": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "path",
                "name",
                "value"
              ],
              "properties": {
                "path": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "value": {
                  "type": "string"
                }
              }
            }
          },
          "publishPath": {
            "type": "string",
            "description": "Defaults to \"public\""
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "routes": {
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "type",
                "source",
                "destination"
              ],
              "properties": {
                "type": {
                  "type": "string",
                  "enum": [
                    "redirect",
                    "rewrite"
                  ]
                },
                "source": {
                  "type": "string"
                },
                "destination": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "webServiceDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "privateServiceDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "backgroundWorkerDetailsPOST": {
        "type": "object",
        "required": [
          "env"
        ],
        "properties": {
          "disk": {
            "type": "object",
            "required": [
              "name",
              "mountPath"
            ],
            "properties": {
              "name": {
                "type": "string"
              },
              "mountPath": {
                "type": "string"
              },
              "sizeGB": {
                "type": "integer",
                "minimum": 1,
                "description": "Defaults to 1"
              }
            }
          },
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "numInstances": {
            "type": "integer",
            "minimum": 1,
            "default": 1,
            "description": "Defaults to 1"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ],
            "default": "no",
            "description": "Defaults to \"no\""
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          }
        }
      },
      "cronJobDetailsPOST": {
        "type": "object",
        "required": [
          "env",
          "schedule"
        ],
        "properties": {
          "env": {
            "type": "string",
            "enum": [
              "docker",
              "elixir",
              "go",
              "node",
              "python",
              "ruby",
              "rust"
            ]
          },
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string",
                    "description": "Defaults to \"./Dockerfile\""
                  }
                }
              },
              {
                "type": "object",
                "required": [
                  "buildCommand",
                  "startCommand"
                ],
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ],
            "default": "starter",
            "description": "Defaults to \"starter\""
          },
          "region": {
            "type": "string",
            "enum": [
              "oregon",
              "frankfurt"
            ],
            "default": "oregon",
            "description": "Defaults to \"oregon\""
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "servicePATCH": {
        "type": "object",
        "properties": {
          "autoDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          },
          "branch": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "buildFilter": {
            "type": "object",
            "properties": {
              "paths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "ignoredPaths": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "rootDir": {
            "type": "string"
          },
          "serviceDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "publishPath": {
                    "type": "string"
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "healthCheckPath": {
                    "type": "string"
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ]
                  },
                  "pullRequestPreviewsEnabled": {
                    "type": "string",
                    "enum": [
                      "yes",
                      "no"
                    ]
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "envSpecificDetails": {
                    "oneOf": [
                      {
                        "type": "object",
                        "properties": {
                          "dockerCommand": {
                            "type": "string"
                          },
                          "dockerContext": {
                            "type": "string"
                          },
                          "dockerfilePath": {
                            "type": "string"
                          }
                        }
                      },
                      {
                        "type": "object",
                        "properties": {
                          "buildCommand": {
                            "type": "string"
                          },
                          "startCommand": {
                            "type": "string"
                          }
                        }
                      }
                    ]
                  },
                  "plan": {
                    "type": "string",
                    "enum": [
                      "starter",
                      "starter_plus",
                      "standard",
                      "standard_plus",
                      "pro",
                      "pro_plus",
                      "pro_max",
                      "pro_ultra"
                    ]
                  },
                  "schedule": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      },
      "dockerDetailsPATCH": {
        "type": "object",
        "properties": {
          "dockerCommand": {
            "type": "string"
          },
          "dockerContext": {
            "type": "string"
          },
          "dockerfilePath": {
            "type": "string"
          }
        }
      },
      "nativeEnvironmentDetailsPATCH": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "startCommand": {
            "type": "string"
          }
        }
      },
      "staticSiteDetailsPATCH": {
        "type": "object",
        "properties": {
          "buildCommand": {
            "type": "string"
          },
          "publishPath": {
            "type": "string"
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "webServiceDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "healthCheckPath": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "privateServiceDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "backgroundWorkerDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ]
          },
          "pullRequestPreviewsEnabled": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "cronJobDetailsPATCH": {
        "type": "object",
        "properties": {
          "envSpecificDetails": {
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "dockerCommand": {
                    "type": "string"
                  },
                  "dockerContext": {
                    "type": "string"
                  },
                  "dockerfilePath": {
                    "type": "string"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "buildCommand": {
                    "type": "string"
                  },
                  "startCommand": {
                    "type": "string"
                  }
                }
              }
            ]
          },
          "plan": {
            "type": "string",
            "enum": [
              "starter",
              "starter_plus",
              "standard",
              "standard_plus",
              "pro",
              "pro_plus",
              "pro_max",
              "pro_ultra"
            ]
          },
          "schedule": {
            "type": "string"
          }
        }
      },
      "envVarKeyValue": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "envVarKeyGenerateValue": {
        "type": "object",
        "required": [
          "key",
          "generateValue"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "generateValue": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      },
      "header": {
        "type": "object",
        "required": [
          "path",
          "name",
          "value"
        ],
        "properties": {
          "path": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "owner": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "user",
              "team"
            ]
          }
        }
      },
      "route": {
        "type": "object",
        "required": [
          "type",
          "source",
          "destination"
        ],
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "redirect",
              "rewrite"
            ]
          },
          "source": {
            "type": "string"
          },
          "destination": {
            "type": "string"
          }
        }
      },
      "serviceType": {
        "type": "string",
        "enum": [
          "static_site",
          "web_service",
          "private_service",
          "background_worker",
          "cron_job"
        ]
      },
      "serviceEnv": {
        "type": "string",
        "enum": [
          "docker",
          "elixir",
          "go",
          "node",
          "python",
          "ruby",
          "rust"
        ]
      },
      "region": {
        "type": "string",
        "enum": [
          "oregon",
          "frankfurt"
        ]
      },
      "notifySetting": {
        "type": "string",
        "enum": [
          "default",
          "notify",
          "ignore"
        ]
      },
      "suspenderType": {
        "type": "string",
        "enum": [
          "admin",
          "billing",
          "user",
          "parent_service",
          "unknown"
        ]
      },
      "deploy": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "commit": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "createdAt": {
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "build_in_progress",
              "update_in_progress",
              "live",
              "deactivated",
              "build_failed",
              "update_failed",
              "canceled"
            ]
          },
          "finishedAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "envVar": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "customDomain": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "domainType": {
            "type": "string",
            "enum": [
              "apex",
              "subdomain"
            ]
          },
          "publicSuffix": {
            "type": "string"
          },
          "redirectForName": {
            "type": "string"
          },
          "verificationStatus": {
            "type": "string",
            "enum": [
              "verified",
              "unverified"
            ]
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "server": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "job": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "job-xxxxx"
          },
          "serviceId": {
            "type": "string",
            "example": "srv-xxxxx"
          },
          "startCommand": {
            "type": "string",
            "example": "echo 'hello world'"
          },
          "planId": {
            "type": "string",
            "example": "plan-srv-004"
          },
          "status": {
            "type": "string",
            "example": "succeeded"
          },
          "createdAt": {
            "type": "string",
            "example": "2021-07-15T07:20:05.777035-07:00"
          },
          "startedAt": {
            "type": "string",
            "example": "2021-07-15T07:20:05.777035-07:00"
          },
          "finishedAt": {
            "type": "string",
            "example": "2021-07-15T07:20:05.777035-07:00"
          }
        }
      },
      "serverPort": {
        "type": "object",
        "properties": {
          "port": {
            "type": "integer",
            "example": 10000
          },
          "protocol": {
            "type": "string",
            "enum": [
              "TCP",
              "UDP"
            ]
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "maybeDeploy": {
        "type": "object",
        "properties": {
          "triggeringDeploy": {
            "type": "string",
            "enum": [
              "yes",
              "no"
            ]
          }
        }
      }
    },
    "responses": {
      "400BadRequest": {
        "description": "The request could not be understood by the server.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "401Unauthorized": {
        "description": "Authorization information is missing or invalid.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "402PaymentRequired": {
        "description": "You must enter payment information to perform this request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "403Forbidden": {
        "description": "You do not have permissions for the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "404NotFound": {
        "description": "Unable to find the requested resource.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "406NotAcceptable": {
        "description": "Unable to generate preferred media types as specified by Accept request header.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "409Conflict": {
        "description": "The current state of the resource conflicts with this request.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "410Gone": {
        "description": "The requested resource is no longer available.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "429RateLimit": {
        "description": "Rate limit has been surpassed.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "500InternalServerError": {
        "description": "An unexpected server error has occurred.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "503ServiceUnavailable": {
        "description": "Server currently unavailable.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "headers": {
      "RateLimitRemaining": {
        "schema": {
          "type": "integer"
        },
        "description": "The number of requests left for this time period."
      }
    }
  }
}